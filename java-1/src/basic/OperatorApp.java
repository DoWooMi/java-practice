package basic;

//연산자(Operator) : 계산을 목적으로 제공되는 기호 또는 키워드
//피연산자 : 연산자에 의해 계산될 값을 의미
//단항연산자(피연산자 : 1개), 이항연산자(피연산자 : 2개), 삼항연산자(피연산자 : 3개)
//일반 연산자는 왼쪽에서 오른쪽으로 처리되지만 단항연산자와 대입연산자는 오른쪽에서 왼쪽으로 처리
// ex) 10+20+30      a=b=c
//     -------->    <-----

public class OperatorApp {
	public static void main(String[] args) {
		//최우선 연산자 : 무조건 가장 먼저 처리되는 연산자
		// ex) ():우선처리 연산자, [] : 배열연산자, . : 객체 연산자
		System.out.println("10+20*3="+(10+20*3));
		System.out.println("(10+20)*3="+((10+20)*3));
		System.out.println("==========================================================");
		//단항연산자 : 피연산자의 갯수가 1개인 연산자
		//1. + : (플러스)양수화 연산자로 피연산자에 +1을 곱하는 연산자
		//2. - : 음수화 연산자(2의 보수 연산자)로 피연산자에 -1을 곳하는 연산자
		//3. ~(틸드) : Bit Not 연산자(1의 보수 연산자)- 정수값으로 표현된 bit값을 반대로 변환 
		//4. !(느낌표) : Not 연산자로 false 또는 true을 반대로 변환하는 연산자
		//5. ++ : 1증가 연산자 - 피연산자가 반드시 변수로 변수값을 1증가 시키는 연산자
		//6. -- : 1감소 연산자 - 피연산자가 반드시 변수로 변수값을 1감소 시키는 연산자
		//7. (자료형) : 강제 형변환 연산자 - 값의 자료형을 일시적으로 변환하는 연산자
		//8. new : 객체 생성 연산자 - 클래스의 생성자를 호출하여 객체를 생성하기 위한 연산자
		int a1=10;
		System.out.println("a1="+a1);
		System.out.println("-a1="+-a1);
		System.out.println("==========================================================");
		System.out.println("20 > 10 = "+(20>10));
		System.out.println("!(20 > 10) = "+!(20>10));
		System.out.println("==============================================================");
		int a2=10, a3=10;
		System.out.println("a2 = "+a2+", a3 = "+a3);	
		
		//++a2;//a2=a2+1;
		//--a3;//a3=a3-1;
		
		//++ 연산자 또는 -- 연산자는 피연산자 뒤에 작성 가능
		//연산식으로만 구현된 단일 명령인 경우 연산자의 위치는 연산결과에 미영향	
		a2++;
		a3--;
		System.out.println("a2 = "+a2+", a3 = "+a3);
		System.out.println("==============================================================");		
		
		
		int a4=10, a5=10;
		System.out.println("a4="+a4+ ", a5="+a5);
		//++ 연산자와 -- 연산자로만 구성된 단일 명령이 아닌 경우 연산자의 위치는 연산결과에 영향
		int result1=++a4; //전처리 : ++a4 연산식 실행 후 result1=a4 연산식 실행
		int result2=a5++; //후처리 : result2=a5 연산식 실행 후 a5++ 연산식 실행
		
		System.out.println("a4="+a4+ ", a5="+a5);
		System.out.println("result1="+result1+ ", result2="+result2);
		System.out.println("==========================================================");
		//이항연산자 : 피연산자의 갯수가 2개인 연산자
		//ex) 산술 연산자, 이동 연산자, 비교 연산자, 논리 연산자, 대입 연산자
		//1. 산술연산자 : *(곱), /(나누기), +(합or문자열 결합), -(차), %(나머지)
		int b1=20, b2=10;
		System.out.println(b1+"*"+b2+"="+(b1*b2));
		System.out.println(b1+"/"+b2+"="+(b1/b2));
		System.out.println(b1+"+"+b2+"="+(b1+b2));
		System.out.println(b1+"-"+b2+"="+(b1-b2));
		System.out.println(b1+"%"+b2+"="+(b1%b2));
		System.out.println("==========================================================");
		//2. 이동 연산자 : 정수값을 원하는 방향으로 Bit 수만큼 이동하는 연산자
		// <<왼쪽 이동 연산자, >>오른쪽 이동 연산자, >>>오른쪽 이동 연산자
		//50(10진수), 4Byte : 00000000 00000000 00000000 00110010
		//50<<3 : 00000000 00000000 00000001 10010000 : 400(10) 2의엔승만큼 커짐(50*8)
		//50>>3 : 00000000 00000000 00000000 00000110 : 6(10) ->부호비트와 같은것 채워짐000
		//-50(10), 4Byte : 11111111 11111111 11111111 11001110
		//-50 >> 3 - 11111111 11111111 11111111 11111001 : -7(10) 
		//-50 >>> 3 - 00011111 11111111 11111111 11111001 : 0으로 채워지며 매우 큰 수가 됨	
		
		
		//3. 비교(관계) 연산자: 값(객체)을 비교하여 false 또는 true 중 하나의 결과를 제공
		// <, >, <=, >=, ==(같다), !=(같지않다), instanceof(객체 비교 연산자)
		System.out.println("20>10="+(20>10));
		System.out.println("20<10="+(20<10));
		System.out.println("20==10="+(20==10));
		System.out.println("20!=0="+(20!=10));
		System.out.println("==========================================================");
		//4. 논리 연산자
		//1) Bit 논리 연산자 : 정수값을 Bit 단위로 계산하기 위한 연산자
		//     ex) &(논리곱), ^(배타적 논리합), |(논리합) 
		//2) 일반 논리 연산자 : 비교 연산식을 연결하기 위한 연산자
		//     ex) &&(And), ||(Or)
		//int c=20;
		int c=-20;
		System.out.println("c="+c);
		System.out.println("c>=10 && c<=30="+(c>=10 && c<=30));
		System.out.println("c<10 || c>30="+(c<10 || c>30));
		System.out.println("==========================================================");
		//5. 대입 연산자 : 왼쪽 피연산자(변수)에 값을 저장하기 위한 연산자로 무조건 마지막에 실행
		//1) 순수 대입 연산자 : 값을 변수에 저장 ex) = 저장하다
		//2) 복합 대입 연산자 : 변수값을 계산하여 변수에 저장 
		//       ex) *=, /=, %=, +=, -=, <<=, >>=, >>>=, &=, ^=, |= 
		int d=10;
		System.out.println("d="+d);
		
		d+=20; //d=d+20; : (정수+정수) 연산시 실수로 형변환 일어남
		System.out.println("d="+d);
		System.out.println("==========================================================");
		//삼항 연산자 : 피연산자의 갯수가 3개인 연산자
		//조건식?참값:거짓값 -조건식의 결과가 true인 경우 참값을 사용하고 false인 경우 거짓값 사용
		//조건식: false 또는 true 중 하나의 결과값을 제공하는 연산식
		int e1= 10, e2=20;
		System.out.println("큰 값="+(e1>e2?e1:e2));
		System.out.println("==========================================================");
		//int e3=10;
		int e3=11;
		System.out.println(e3+":"+(e3%2==0?"짝수":"홀수"));
		System.out.println("==========================================================");
		
		
		
		
	}

}
