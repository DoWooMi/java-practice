package xyz.itwill.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import xyz.itwill.dto.Group4DTO;

public class Group4DAO extends JdbcDAO {
	private static Group4DAO _dao;
	
	public Group4DAO() {
		// TODO Auto-generated constructor stub
	}
	
	
	static {
		_dao=new Group4DAO();
	}

	public static Group4DAO getDao() {
		return _dao;
	}
	
	public int insertGroup4(Group4DTO group4) {
		Connection con=null;
		PreparedStatement pstmt=null;
		int rows=0;
		try {
			con=getConnection();
			String sql="insert into Group4 values(?,?,?)";
			pstmt=con.prepareStatement(sql);
			pstmt.setInt(1, group4.getNo());
			pstmt.setString(2, group4.getName());
			pstmt.setString(3, group4.getAddress());
			
			rows=pstmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(con, pstmt);
		}
		return rows;
	}
	
	public int updateGroup4 (Group4DTO group4) {
		Connection con=null;
		PreparedStatement pstmt=null;
		int rows=0;
		try {
			con=getConnection();
			String sql="update Group4 set name=?, address=? where no=?" ;
			pstmt=con.prepareStatement(sql);
			pstmt.setString(1, group4.getName());
			pstmt.setString(2, group4.getAddress());
			pstmt.setInt(3, group4.getNo());
			
			rows=pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return rows;
	}
	public List<Group4DTO> selectGroupList(){
		Connection con=null;
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		List<Group4DTO> groupList = new ArrayList<>();
		try {
			con=getConnection();
			String sql="select * from Group4 order by no";
			pstmt=con.prepareStatement(sql);
			rs=pstmt.executeQuery();
			while (rs.next()) {
				Group4DTO group4 =new Group4DTO();
				group4.setNo(rs.getInt("no"));
				group4.setName(rs.getString("name"));
				group4.setAddress(rs.getString("address"));
				groupList.add(group4);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(con, pstmt, rs);
		}
		
		return groupList;
	}
	
}
